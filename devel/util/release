#!/bin/bash
#This script will create at ../out
#a release version of the LiteScript compiler (>v0.8), in order to
#make the litescript compiler stable package for the npm repository

echo release $1 $2 $3
set -ex

VERSION=$1
using=$2
CVER=$3

if [ "$2" = "" ]; then 
    using=using
    CVER=$VERSION #compile itself 
fi

if [ "$1" = "" -o "$using" != "using" -o "$CVER" = "" ]; then 
    echo usage: ./release 0.6 [using x.y]
    exit 1
fi

CWD=$(pwd) 
out='out'

#--------------------------------------
# MAIN

echo Release LiteScript ${VERSION} 
echo -----------------------
echo cwd: ${CWD}
echo dest dir: ${out}

mkdir -p ${out}

#compile ${VERSION} using ${CVER} version, w/o comments or mapsource
node liteVersion -use v${CVER}/lite-to-js -nomap  ../source/v${VERSION}/js_lite -o ${out}/lib

#copy interfaces dir
mkdir -p ${out}/lib/interfaces
cp -r ../source/v${VERSION}/interfaces ${out}/lib

#copy if newer: lite (#!/usr/bin/env node), just: require('./js_lite')
cp -u ../source/v${VERSION}/lite ${out}/lib/lite
chmod 777 ${out}/lib/lite

#copy v0.x/package.json to Litescript root
cp ../source/v${VERSION}/package.json ../..

#extra tests - use new compiler

#check version consistency

echo ${out}/lib/lite -run tests/extra-check-version -o out -i ../../source/v0.8/interfaces
${out}/lib/lite -run tests/extra-check-version -o out -i ../../source/v0.8/interfaces

#test nice functionss

${out}/lib/lite -v 2 -nomap tests/extra-nice-function 
node --harmony generated/js/extra-nice-function
rm -r generated/js

#test compiler at ${out}/lib
node test -use $VERSION

echo files created at: ${out}/

bash ./copy-to-main ${VERSION} 
