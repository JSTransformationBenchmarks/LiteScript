#ifndef _DISPATCHER_C__H
#define _DISPATCHER_C__H
#include "../core/LiteC-core.h"
// core support and defined classes init
extern void __declareClasses();
// methods
enum _VERBS { //a symbol for each distinct method name
    isDirectory_ = -_CORE_METHODS_MAX-177,
    isFile_,
    option_,
    valueFor_,
    getPos_,
    search_,
    compile_,
    compileFile_,
    compileFileOnModule_,
    parseOnModule_,
    createNewModule_,
    produceModule_,
    importDependencies_,
    importModule_,
    getInterface_,
    compilerVar_,
    setCompilerVar_,
    redirectOutput_,
    lock_,
    getParent_,
    positionText_,
    sayErr_,
    warn_,
    throwError_,
    throwParseFailed_,
    parse_,
    produce_,
    parseDirect_,
    opt_,
    req_,
    reqOneOf_,
    optList_,
    optSeparatedList_,
    optFreeFormList_,
    reqSeparatedList_,
    listArgs_,
    out_,
    outLineAsComment_,
    outLinesAsComment_,
    outPrevLinesComments_,
    getEOLComment_,
    addSourceMap_,
    levelIndent_,
    callOnSubTree_,
    getRootNode_,
    parseAccessors_,
    insertAccessorAt_,
    addAccessor_,
    reqBody_,
    hasAdjective_,
    parseType_,
    declareName_,
    addMemberTo_,
    tryGetMember_,
    getScopeNode_,
    findInScope_,
    tryGetFromScope_,
    addToScope_,
    addToSpecificScope_,
    addToExport_,
    createScope_,
    tryGetOwnerNameDecl_,
    lastLineInxOf_,
    assignIfUndefined_,
    reset_,
    initSource_,
    preParseSource_,
    checkTitleCode_,
    tokenize_,
    preprocessor_,
    process_,
    nextSourceLine_,
    replaceSourceLine_,
    parseTripleQuotes_,
    checkMultilineComment_,
    checkConditionalCompilation_,
    setPos_,
    posToString_,
    getPrevIndent_,
    consumeToken_,
    nextToken_,
    returnToken_,
    nextCODELine_,
    say_,
    throwErr_,
    splitExpressions_,
    dump_,
    tokenizeLine_,
    recognizeToken_,
    start_,
    put_,
    startNewLine_,
    ensureNewLine_,
    blankLine_,
    getResult_,
    markSourceMap_,
    startsWith_,
    endsWith_,
    trimRight_,
    trimLeft_,
    capitalized_,
    countSpaces_,
    quoted_,
    rpad_,
    remove_,
    parseList_,
    addToAllProperties_,
    getNames_,
    declare_,
    evaluateAssignments_,
    createNameDeclaration_,
    declareInScope_,
    getTypeFromAssignedValue_,
    validatePropertyAccess_,
    produceForMap_,
    tryGetReference_,
    getResultType_,
    calcReference_,
    calcReferenceArr_,
    getTypeName_,
    addArguments_,
    getPrecedence_,
    declareIntoVar_,
    growExpressionTree_,
    getValue_,
    forEach_,
    parseParametersAndBody_,
    addMethodToOwnerNameDecl_,
    createReturnType_,
    produceFunctionBody_,
    produceHeader_,
    produceStaticListMethodsAndProps_,
    produceClassRegistration_,
    processAppendTo_,
    makeName_,
    getRefFilename_,
    setTypes_,
    setSubType_,
    processItems_,
    isDeclaration_,
    isExecutableStatement_,
    validate_,
    produceDeclaredExternProps_,
    produceSustance_,
    produceMainFunctionBody_,
    producePropertiesInitialValueAssignments_,
    produceLooseExecutableStatements_,
    getCompiledLines_,
    getCompiledText_,
    produceDispatcher_,
    normalize_,
    setMember_,
    findOwnMember_,
    ownMember_,
    getMemberCount_,
    replaceForward_,
    makePointTo_,
    originalDeclarationPosition_,
    caseMismatch_,
    addMember_,
    composedName_,
    info_,
    findMember_,
    isInstanceof_,
    getMembersFromObjProperties_,
    isInParents_,
    processConvertTypes_,
    convertType_,
    assignTypeFromValue_,
    assignTypebyNameAffinity_,
    getComposedName_,
    isClass_,
    isMethod_,
    isProperty_,
    addToAllMethodNames_,
    outWithExtension_,
    searchModule_,
_LAST_VERB};
// propery names
enum _THINGS { //a symbol for each distinct property name
    size_= _CORE_PROPS_LENGTH,
    mtime_,
    mode_,
    soft_,
    lastIndex_,
    items_,
    verboseLevel_,
    warningLevel_,
    comments_,
    target_,
    debugEnabled_,
    skip_,
    nomap_,
    single_,
    compileIfNewer_,
    browser_,
    extraComments_,
    defines_,
    projectDir_,
    mainModuleName_,
    outDir_,
    storeMessages_,
    literalMap_,
    version_,
    now_,
    options_,
    moduleCache_,
    rootModule_,
    compilerVars_,
    main_,
    Producer_,
    recurseLevel_,
    lexer_,
    parent_,
    keyword_,
    type_,
    keyType_,
    itemType_,
    extraInfo_,
    lineInx_,
    sourceLineNum_,
    column_,
    indent_,
    locked_,
    accessors_,
    executes_,
    hasSideEffects_,
    isMap_,
    scope_,
    skipSemiColon_,
    project_,
    filename_,
    lines_,
    infoLines_,
    line_,
    infoLine_,
    token_,
    index_,
    interfaceMode_,
    stringInterpolationChar_,
    last_,
    maxSourceLineNum_,
    hardError_,
    softError_,
    outCode_,
    text_,
    tokens_,
    pre_,
    section_,
    post_,
    postIndent_,
    lineNum_,
    currLine_,
    hLines_,
    lastOriginalCodeComment_,
    lastOutCommentLine_,
    sourceMap_,
    exportNamespace_,
    toHeader_,
    debugOptions_,
    enabled_,
    file_,
    args_,
    list_,
    aliasVarRef_,
    assignedValue_,
    nameDecl_,
    declared_,
    varRef_,
    body_,
    exceptionBlock_,
    catchVar_,
    finallyBody_,
    specifier_,
    expr_,
    conditional_,
    elseStatement_,
    nextIf_,
    preWhileUntilExpression_,
    postWhileUntilExpression_,
    control_,
    variant_,
    indexVar_,
    mainVar_,
    iterable_,
    where_,
    conditionPrefix_,
    endExpression_,
    increment_,
    filterExpression_,
    lvalue_,
    rvalue_,
    preIncDec_,
    postIncDec_,
    importedModule_,
    produceType_,
    calcType_,
    expression_,
    negated_,
    left_,
    right_,
    pushed_,
    precedence_,
    intoVar_,
    operandCount_,
    root_,
    ternaryCount_,
    paramsDeclarations_,
    definePropItems_,
    EndFnLineNum_,
    varRefSuper_,
    toNamespace_,
    kind_,
    endLineInx_,
    global_,
    importParameter_,
    names_,
    globVar_,
    assignment_,
    references_,
    fnCall_,
    arrExpression_,
    cases_,
    defaultBody_,
    expressions_,
    elseExpression_,
    booleanExpression_,
    resultExpression_,
    adjectives_,
    specific_,
    preParsedVarRef_,
    intoVars_,
    statements_,
    isMain_,
    exportDefault_,
    fileInfo_,
    exports_,
    exportsReplaced_,
    requireCallNodes_,
    referenceCount_,
    members_,
    nodeDeclared_,
    normalizeModeKeepFirstCase_,
    isScope_,
    isNamespace_,
    isForward_,
    isDummy_,
    pointsTo_,
    returnType_,
    informError_,
    converted_,
    failures_,
    importInfo_,
    dir_,
    extension_,
    base_,
    sourcename_,
    hasPath_,
    isCore_,
    isLite_,
    isInterface_,
    relPath_,
    relFilename_,
    outFilename_,
    outRelFilename_,
    outExtension_,
    outFileIsNewer_,
    interfaceFile_,
    interfaceFileExists_,
    externalCacheExists_,
    isGlobalDeclare_,
    globalImport_,
    createFile_,
_LAST_THING};
#include "litec.h"
#include "C_global_import/fs.h"
#include "C_global_import/path.h"
#include "lib/color.h"
#include "lib/ControlledError.h"
#include "lib/OptionsParser.h"
#include "lib/GeneralOptions.h"
#include "Compiler.h"
#include "Project.h"
#include "ASTBase.h"
#include "Parser.h"
#include "lib/logger.h"
#include "lib/Strings.h"
#include "lib/PMREX.h"
#include "Grammar.h"
#include "lib/UniqueID.h"
#include "Names.h"
#include "Validate.h"
#include "lib/Environment.h"
#include "lib/mkPath.h"
#include "Producer_c.h"
#endif