'Generated by LiteScript compiler v0.8.9, source: lib/OptionsParser.lite.md
' -----------
Module OptionsParser
' -----------
    '    export only class OptionsParser
    ' constructor
    Class OptionsParser
        Public Property lastIndex as Object
         Public Property items as Array' mainType: Array  ' itemType: String
     
    
    Sub New(argv)

        'if argv.length and argv[0] is 'node'
        if argv.length AndAlso argv(0) = "node" Then
        
            'argv=argv.slice(1) //remove 'node' if calling as a script
            argv = argv.slice(1)
        
        End if

        '.items = argv.slice(1) //remove this script/exe 'lite' from command line arguments
        Me.items = argv.slice(1)
     end function
    
     ' ---------------------------
     Public Function option (shortOption, argName)

        'if .getPos(shortOption,argName) into var pos >= 0
        Dim pos as Object
        if Assign(pos,Me.getPos(shortOption, argName)) >= 0 Then
        
            '.items.splice(pos,1)
            Me.items.splice(pos, 1)
            'return true
            return true
        
        End if

        'return false
        return false
     end function
     ' ---------------------------
     Public Function valueFor (shortOption, argName)

        'if .getPos(shortOption,argName) into var pos >= 0
        Dim pos as Object
        if Assign(pos,Me.getPos(shortOption, argName)) >= 0 Then
        
            'var value = .items[pos+1]
            Dim value = Me.items(pos + 1)
            '.items.splice(pos,2)
            Me.items.splice(pos, 2)
            'return value
            return value
        
        End if

        'return undefined
        return undefined
     end function
     ' ---------------------------
     Public Function getPos (shortOption, argName)

'search several possible forms of the option, e.g. -o --o -outdir --outdir

        'var forms=['-#{shortOption}','--#{shortOption}']
        Dim forms = new ArrayList From {"-" + shortOption, "--" + shortOption}
        'if argName, forms.push('--#{argName}','-#{argName}')
        if argName Then forms.push("--" + argName, "-" + argName)

        'return .search(forms) into .lastIndex
        return Assign(Me.lastIndex,Me.search(forms))
     end function
     ' ---------------------------
     Public Function search (list)
        'for each item in list
        For Each item in list
        
            'var result = .items.indexOf(item)
            Dim result = Me.items.indexOf(item)
            'if result >=0, return result
            if result >= 0 Then return result
        Next'  each in list
        'return -1
        return -1
     end function
    
    end class 'OptionsParser
' -----------
' Module code
' -----------
end module
